plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'java'
    id 'war'
    id 'idea'
    id 'eclipse'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


group = 'com.prowidesoftware'
version = '1.0.1'
description = 'Prowide Integrator sandbox'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    /////////////////////////////////////////////////////////////////////////
    //
    // REPLACE THIS FILE REFERENCES WITH YOUR DISTRIBUTION OR TRIAL VERSIONS
    //
    /////////////////////////////////////////////////////////////////////////
    
    implementation fileTree('lib')
    
    /////////////////////////////////////////////////////////////////////////

    compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
    implementation 'javax.xml.bind:jaxb-api:2.2.5'
    implementation 'com.sun.xml.bind:jaxb-impl:2.2.5'
    // we also configure standalone.sh with MODULE_OPTS="-jaxpmodule \"javax.xml.jaxp-provider\""

    // With embedded Tomcat
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'

    // To generate a war for WildFly container instead of the abode, use this:
    //implementation ('org.springframework.boot:spring-boot-starter-web') {
    //    exclude module: "spring-boot-starter-tomcat"
    //}

    /*
     * Tomcat jasper is required for the JSP to work
     * When war is used in command line and started with the embeded tomcat everything works just fine.
     * However then deployed in Tomcat as a regular war, since Spring Boot 2.3.3 this hits the Tomcat issue:
     * https://bz.apache.org/bugzilla/show_bug.cgi?id=64097
     *
     * This issue is fixed in Tomcat:
     * - master for 10.0.0.0-M1 onwards
     * - 9.0.x for 9.0.31 onwards
     * - 8.5.x for 8.5.51 onwards
     * - 7.0.x for 7.0.100 onwards
     *
     * In order to support the dual-war that can be either deployed in Tomcat or run with embedded Tomcat through command
     * line we need to make this jasper dependency provided in Runtime so that it is not available in war deployment
     */
    providedRuntime 'org.apache.tomcat.embed:tomcat-embed-jasper'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation group: 'com.h2database', name: 'h2', version: '1.4.199'

    // GUI webjars
    compile group: 'org.webjars', name: 'bootstrap', version: '4.3.1'
    compile group: 'org.webjars', name: 'webjars-locator-core', version: '0.43'
    compile group: 'org.webjars', name: 'jquery', version: '3.4.1'
    compile group: 'org.webjars', name: 'jquery-ui', version: '1.12.1'
    compile group: 'org.webjars.bower', name: 'jquery-mask-plugin', version: '1.14.15'
    compile group: 'org.webjars', name: 'jquery-validation', version: '1.19.0'
    compile group: 'org.webjars', name: 'jquery.inputmask', version: '3.3.7'

    // JST taglib "fmt"
    compile group: 'javax.servlet', name: 'jstl', version: '1.2'

    // Prowide Integrator - SDK
    implementation('org.apache.commons:commons-lang3:3.8.1')
    implementation('org.apache.commons:commons-text:1.6')
    implementation('com.google.code.gson:gson:2.8.2')
    implementation 'org.apache.derby:derby:10.12.+'

    // Prowide Integrator - Validation
    implementation('org.mozilla:rhino:1.7.7.2')

    // Prowide Integrator - MyFormat
    implementation('org.apache.poi:poi:3.17') {
        transitive = false
    }

    // Test & Development
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}